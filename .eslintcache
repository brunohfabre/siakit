[{"/Users/brunofabre/Documents/projects/coddee/siakit/src/@types/react-daterange-picker.d.ts":"1","/Users/brunofabre/Documents/projects/coddee/siakit/src/App.tsx":"2","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Card/index.tsx":"3","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Card/styles.ts":"4","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Dropdown/index.tsx":"5","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Dropdown/styles.ts":"6","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Checkbox/index.tsx":"7","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Checkbox/styles.ts":"8","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Colors/index.tsx":"9","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Colors/styles.ts":"10","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/DatePicker/index.tsx":"11","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/DatePicker/styles.ts":"12","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/DateRangePicker/index.tsx":"13","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/DateRangePicker/styles.ts":"14","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Input/index.tsx":"15","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Input/styles.ts":"16","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/InputMask/index.tsx":"17","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/InputMask/styles.ts":"18","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Radio/index.tsx":"19","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Radio/styles.ts":"20","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Select/index.tsx":"21","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Select/styles.ts":"22","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Slider/index.tsx":"23","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Slider/styles.ts":"24","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Switch/index.tsx":"25","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Switch/styles.ts":"26","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/TextArea/index.tsx":"27","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/TextArea/styles.ts":"28","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/styles.ts":"29","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Spin/index.tsx":"30","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Spin/styles.ts":"31","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Tooltip/index.tsx":"32","/Users/brunofabre/Documents/projects/coddee/siakit/src/index.tsx":"33","/Users/brunofabre/Documents/projects/coddee/siakit/src/pages/Form/index.tsx":"34","/Users/brunofabre/Documents/projects/coddee/siakit/src/pages/Form/styles.ts":"35","/Users/brunofabre/Documents/projects/coddee/siakit/src/react-app-env.d.ts":"36","/Users/brunofabre/Documents/projects/coddee/siakit/src/routes/index.tsx":"37","/Users/brunofabre/Documents/projects/coddee/siakit/src/styles/global.ts":"38","/Users/brunofabre/Documents/projects/coddee/siakit/src/utils/masks.ts":"39","/Users/brunofabre/Documents/projects/coddee/siakit/src/pages/Form/Test/index.tsx":"40","/Users/brunofabre/Documents/projects/coddee/siakit/src/pages/Form/Test/styles.ts":"41","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/components/Remove/index.tsx":"42","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/components/Remove/styles.ts":"43","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/ModalContainer/index.tsx":"44","/Users/brunofabre/Documents/projects/coddee/siakit/src/hooks/modal.tsx":"45","/Users/brunofabre/Documents/projects/coddee/siakit/src/hooks/index.tsx":"46","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/ModalContainer/Modal/index.tsx":"47","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/ModalContainer/Modal/styles.ts":"48","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/index.ts":"49"},{"size":52,"mtime":1609262852437,"results":"50","hashOfConfig":"51"},{"size":385,"mtime":1610999028184,"results":"52","hashOfConfig":"51"},{"size":418,"mtime":1609262852438,"results":"53","hashOfConfig":"51"},{"size":196,"mtime":1609262852438,"results":"54","hashOfConfig":"51"},{"size":1680,"mtime":1609262852438,"results":"55","hashOfConfig":"51"},{"size":248,"mtime":1609262852438,"results":"56","hashOfConfig":"51"},{"size":2107,"mtime":1609428315031,"results":"57","hashOfConfig":"51"},{"size":676,"mtime":1609428441404,"results":"58","hashOfConfig":"51"},{"size":1290,"mtime":1610156998244,"results":"59","hashOfConfig":"51"},{"size":497,"mtime":1610156976087,"results":"60","hashOfConfig":"51"},{"size":2032,"mtime":1610157168641,"results":"61","hashOfConfig":"51"},{"size":904,"mtime":1610156054528,"results":"62","hashOfConfig":"51"},{"size":2057,"mtime":1610157194658,"results":"63","hashOfConfig":"51"},{"size":909,"mtime":1610156101009,"results":"64","hashOfConfig":"51"},{"size":1913,"mtime":1611773443157,"results":"65","hashOfConfig":"51"},{"size":852,"mtime":1611254074719,"results":"66","hashOfConfig":"51"},{"size":2493,"mtime":1610157245099,"results":"67","hashOfConfig":"51"},{"size":852,"mtime":1610156128114,"results":"68","hashOfConfig":"51"},{"size":2035,"mtime":1609428641777,"results":"69","hashOfConfig":"51"},{"size":676,"mtime":1609428506600,"results":"70","hashOfConfig":"51"},{"size":7181,"mtime":1611255880943,"results":"71","hashOfConfig":"51"},{"size":1774,"mtime":1610156149465,"results":"72","hashOfConfig":"51"},{"size":1216,"mtime":1609262852441,"results":"73","hashOfConfig":"51"},{"size":716,"mtime":1609262852442,"results":"74","hashOfConfig":"51"},{"size":1556,"mtime":1609428410031,"results":"75","hashOfConfig":"51"},{"size":1175,"mtime":1609428525641,"results":"76","hashOfConfig":"51"},{"size":2043,"mtime":1610157319173,"results":"77","hashOfConfig":"51"},{"size":1076,"mtime":1610156191718,"results":"78","hashOfConfig":"51"},{"size":865,"mtime":1611773460886,"results":"79","hashOfConfig":"51"},{"size":617,"mtime":1609262852442,"results":"80","hashOfConfig":"51"},{"size":1000,"mtime":1609262852442,"results":"81","hashOfConfig":"51"},{"size":321,"mtime":1609426204252,"results":"82","hashOfConfig":"51"},{"size":198,"mtime":1609262852443,"results":"83","hashOfConfig":"51"},{"size":9393,"mtime":1611689563190,"results":"84","hashOfConfig":"51"},{"size":292,"mtime":1609263331450,"results":"85","hashOfConfig":"51"},{"size":40,"mtime":1609262852443,"results":"86","hashOfConfig":"51"},{"size":364,"mtime":1611255974922,"results":"87","hashOfConfig":"51"},{"size":638,"mtime":1611254020309,"results":"88","hashOfConfig":"51"},{"size":89,"mtime":1609262852444,"results":"89","hashOfConfig":"51"},{"size":2380,"mtime":1611255961676,"results":"90","hashOfConfig":"51"},{"size":185,"mtime":1610154568380,"results":"91","hashOfConfig":"51"},{"size":342,"mtime":1610155812514,"results":"92","hashOfConfig":"51"},{"size":401,"mtime":1610155525516,"results":"93","hashOfConfig":"51"},{"size":362,"mtime":1611255934308,"results":"94","hashOfConfig":"51"},{"size":1318,"mtime":1611003786363,"results":"95","hashOfConfig":"51"},{"size":204,"mtime":1610999009962,"results":"96","hashOfConfig":"51"},{"size":848,"mtime":1611019803668,"results":"97","hashOfConfig":"51"},{"size":1390,"mtime":1611773624570,"results":"98","hashOfConfig":"51"},{"size":576,"mtime":1611261309686,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11e22qy",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brunofabre/Documents/projects/coddee/siakit/src/@types/react-daterange-picker.d.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/App.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Card/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Card/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Dropdown/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Dropdown/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Checkbox/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Checkbox/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Colors/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Colors/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/DatePicker/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/DatePicker/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/DateRangePicker/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/DateRangePicker/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Input/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Input/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/InputMask/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/InputMask/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Radio/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Radio/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Select/index.tsx",["201"],"import React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useState,\n  InputHTMLAttributes,\n  SyntheticEvent,\n} from 'react';\nimport Tippy from '@tippyjs/react/headless';\nimport debounce from 'lodash.debounce';\nimport { useField } from '@unform/core';\nimport { FiAlertCircle, FiChevronDown } from 'react-icons/fi';\n\nimport Spin from '../../Spin';\n\nimport Remove from '../components/Remove';\n\nimport { Container, Error } from '../styles';\nimport {\n  Options,\n  Option,\n  TextSelected,\n  InputContainer,\n  SelectFocusInfo,\n} from './styles';\n\ninterface Option {\n  value: string;\n  label: string;\n}\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  label?: string;\n  width?: string;\n  options: Option[];\n  onSearch?(value: string): void;\n  loading?: boolean;\n  next?(): void;\n}\n\nconst Select: React.FC<Props> = ({\n  name,\n  label,\n  width = 'initial',\n  options,\n  onChange,\n  onSearch,\n  loading = false,\n  next,\n  placeholder,\n}) => {\n  const initialRef = useRef(true);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState('');\n\n  const [selected, setSelected] = useState<Option | null>(null);\n  const [value, setValue] = useState('');\n  const [data, setData] = useState<Option[]>(options);\n  const [prevDataLength, setPrevDataLength] = useState(0);\n  const [valueToSet, setValueToSet] = useState<Option | null>(null);\n\n  const { fieldName, defaultValue, registerField, error } = useField(name);\n\n  const handleSelectOption = useCallback(\n    (option) => {\n      setIsFocused(false);\n      setIsFilled(option.value);\n      setSelected(option);\n      setData(options);\n\n      setValueToSet(null);\n\n      if (onChange) {\n        onChange(option);\n      }\n\n      if (inputRef.current) {\n        inputRef.current.value = '';\n        setValue('');\n      }\n    },\n    [onChange, options],\n  );\n\n  useEffect(() => {\n    if (options) {\n      if (valueToSet) {\n        setData([valueToSet, ...options]);\n      } else {\n        setData(options);\n      }\n    }\n  }, [options, valueToSet]);\n\n  useEffect(() => {\n    if (initialRef.current) {\n      if (defaultValue) {\n        if (typeof defaultValue === 'object') {\n          handleSelectOption(defaultValue);\n\n          const findOption = data.find(\n            (item) => item.value === defaultValue.value,\n          );\n\n          if (!findOption) {\n            setValueToSet(defaultValue);\n\n            setData((state) => [defaultValue, ...state]);\n          }\n        } else {\n          const findOption = data.find((item) => item.value === defaultValue);\n\n          if (findOption) {\n            handleSelectOption(findOption);\n          }\n        }\n      }\n\n      initialRef.current = false;\n    }\n  }, [defaultValue, data, handleSelectOption]);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      getValue: () => selected,\n      clearValue: () => {\n        setSelected(null);\n        setValue('');\n        setIsFilled('');\n\n        if (inputRef.current) {\n          inputRef.current.value = '';\n        }\n      },\n      setValue: (ref, inputValue) => {\n        if (inputValue) {\n          if (typeof inputValue === 'object') {\n            handleSelectOption(inputValue);\n\n            const findOption = data.find(\n              (item) => item.value === inputValue.value,\n            );\n\n            if (!findOption) {\n              setValueToSet(inputValue);\n\n              setData((state) => [inputValue, ...state]);\n            }\n          } else {\n            const findOption = data.find((item) => item.value === inputValue);\n\n            if (findOption) {\n              handleSelectOption(findOption);\n            }\n          }\n        }\n      },\n    });\n  }, [fieldName, registerField, selected, handleSelectOption, data]);\n\n  const debounced = useCallback(\n    debounce((e) => onSearch && onSearch(e.target.value), 350),\n    [],\n  );\n\n  const handleInputChange = useCallback(\n    (e) => {\n      setValue(e.target.value);\n      setIsFilled(e.target.value);\n\n      if (onSearch) {\n        debounced(e);\n      } else if (valueToSet) {\n        setData(\n          [valueToSet, ...options].filter((option) =>\n            option.label.toLowerCase().includes(e.target.value.toLowerCase()),\n          ),\n        );\n      } else {\n        setData(\n          options.filter((option) =>\n            option.label.toLowerCase().includes(e.target.value.toLowerCase()),\n          ),\n        );\n      }\n    },\n    [onSearch, options, debounced, valueToSet],\n  );\n\n  const handleClearInput = useCallback(() => {\n    setIsFocused(false);\n    setSelected(null);\n    setValue('');\n    setIsFilled('');\n    setValueToSet(null);\n    setData(options);\n\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n  }, [options]);\n\n  function handleScroll(event: SyntheticEvent): void {\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n\n    if (loading) {\n      return;\n    }\n\n    if (prevDataLength === options.length) {\n      return;\n    }\n\n    if (scrollHeight - scrollTop === clientHeight) {\n      setPrevDataLength(options.length);\n\n      if (next) {\n        next();\n      }\n    }\n  }\n\n  const handleClickOutside = useCallback(() => {\n    setIsFocused(false);\n    setIsFilled('');\n    setValue('');\n\n    if (valueToSet) {\n      setData([valueToSet, ...options]);\n    } else {\n      setData(options);\n    }\n\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n  }, [valueToSet, options]);\n\n  return (\n    <Tippy\n      interactive\n      placement=\"bottom-start\"\n      visible={isFocused}\n      onClickOutside={handleClickOutside}\n      render={() => (\n        <Spin padding={16} spinning={loading}>\n          <Options onScroll={handleScroll}>\n            {data.map((option) => (\n              <Option\n                key={option.value}\n                onClick={() => handleSelectOption(option)}\n                role=\"button\"\n                tabIndex={0}\n                onKeyPress={undefined}\n                isSelected={selected?.value === option.value}\n              >\n                {option.label}\n              </Option>\n            ))}\n          </Options>\n        </Spin>\n      )}\n    >\n      <Container isErrored={!!error} width={width}>\n        {label && <label htmlFor={fieldName}>{label}</label>}\n\n        <InputContainer isFocused={isFocused} isErrored={!!error}>\n          {!value && <TextSelected>{selected?.label}</TextSelected>}\n\n          <input\n            ref={inputRef}\n            onFocus={() => setIsFocused(true)}\n            type=\"text\"\n            onChange={handleInputChange}\n            placeholder={selected || isFilled ? '' : placeholder}\n          />\n          {(selected || isFilled) && <Remove onClick={handleClearInput} />}\n\n          {error && (\n            <Error content={error}>\n              <FiAlertCircle color=\"#dc3545\" size={16} />\n            </Error>\n          )}\n\n          <SelectFocusInfo onClick={() => setIsFocused(true)} type=\"button\">\n            <FiChevronDown size={20} color=\"#666\" />\n          </SelectFocusInfo>\n        </InputContainer>\n      </Container>\n    </Tippy>\n  );\n};\n\nexport default Select;\n","/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Select/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Slider/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Slider/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Switch/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/Switch/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/TextArea/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/TextArea/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Spin/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Spin/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Tooltip/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/pages/Form/index.tsx",["202","203","204","205","206","207","208","209","210","211"],"import React, { useCallback, useRef, useState, useEffect } from 'react';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\n\nimport Spin from '@components/Spin';\n\nimport Input from '@components/Form/Input';\nimport InputMask from '@components/Form/InputMask';\nimport TextArea from '@components/Form/TextArea';\nimport Checkbox from '@components/Form/Checkbox';\nimport Radio from '@components/Form/Radio';\nimport DatePicker from '@components/Form/DatePicker';\nimport DateRangePicker from '@components/Form/DateRangePicker';\nimport Select from '@components/Form/Select';\nimport Colors from '@components/Form/Colors';\nimport Switch from '@components/Form/Switch';\n\nimport Dropdown from '@components/Dropdown';\nimport Tooltip from '@components/Tooltip';\n\nimport { Button } from './styles';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nconst FormPage: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [repositories, setRepositories] = useState<any[]>([]);\n\n  const loadRepositories = useCallback(async () => {\n    setLoading(true);\n\n    const response = await axios.get(\n      `https://api.github.com/search/repositories?q=java&per_page=10&page=${page}`,\n      {\n        headers: {\n          Authorization: 'token 09a67ae8bb98e4f48418f03d984b3e01e8bc045b',\n        },\n      },\n    );\n\n    setRepositories([...repositories, ...response.data.items]);\n\n    setLoading(false);\n  }, [repositories, page]);\n\n  useEffect(() => {\n    loadRepositories();\n  }, [page]);\n\n  const handleSubmit = useCallback(async (data) => {\n    try {\n      console.log(data);\n\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Campo obrigatorio'),\n        age: Yup.string().required('Campo obrigatorio'),\n        phone: Yup.string().required('Campo obrigatorio'),\n        bio: Yup.string().required('Campo obrigatorio'),\n        animals: Yup.string().required('Campo obrigatorio'),\n        genre: Yup.string().required('Campo obrigatorio'),\n        initialDate: Yup.string().required('Campo obrigatorio'),\n        periodDate: Yup.string().required('Campo obrigatorio'),\n        state: Yup.string().required('Campo obrigatorio'),\n        print: Yup.string().test(\n          'printTest',\n          'nao e true',\n          (value) => value === 'true',\n        ),\n        color: Yup.string().required('Campo obrigatorio'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      const validationErrors: Errors = {};\n\n      err.inner.forEach((error: { path: string; message: string }) => {\n        validationErrors[error.path] = error.message;\n      });\n\n      formRef.current?.setErrors(validationErrors);\n    }\n  }, []);\n\n  return (\n    <Form\n      ref={formRef}\n      onSubmit={handleSubmit}\n      initialData={{\n        name: 'Bruno Henrique de Fabre',\n        age: 23,\n        phone: 19983262172,\n        bio:\n          'Engenheiro de Software, entusiasta de novas tecnologias e apaixonado por JavaScript e todo seu ecossistema.',\n        animals: ['cat'],\n        genre: 'm',\n        initialDate: new Date(),\n        periodDate: [new Date(), new Date()],\n        state: 'SP',\n        print: true,\n        color: '#8bc34a',\n      }}\n    >\n      {/* <section>\n        <Dropdown\n          options={[\n            { id: '1', label: 'Bruno Henrique de Fabre' },\n            { id: '2', label: 'Vinicius Henrique de Souza' },\n          ]}\n          onSelect={(value) => console.log(value)}\n        >\n          <button type=\"button\">hoverable dropdown here</button>\n        </Dropdown>\n        <Dropdown\n          isClickable\n          options={[\n            { id: '1', label: 'Bruno Henrique de Fabre' },\n            { id: '2', label: 'Vinicius Henrique de Souza' },\n          ]}\n          onSelect={(value) => console.log(value)}\n        >\n          <button type=\"button\">clickable dropdown here</button>\n        </Dropdown>\n      </section> */}\n\n      <section>\n        <h3>input</h3>\n\n        <Input\n          name=\"name\"\n          label=\"Nome completo\"\n          placeholder=\"Nome completo\"\n          disabled\n        />\n        <Input\n          name=\"age\"\n          label=\"Idade\"\n          placeholder=\"Idade\"\n          type=\"number\"\n          disabled\n        />\n      </section>\n\n      <section>\n        <h3>input mask</h3>\n\n        <InputMask\n          name=\"phone\"\n          placeholder=\"Telefone\"\n          mask=\"phone\"\n          label=\"Telefone\"\n        />\n      </section>\n\n      <section>\n        <h3>Textarea</h3>\n\n        <TextArea name=\"bio\" placeholder=\"Biografia\" label=\"Biografia\" />\n      </section>\n\n      <section>\n        <h3>checkbox</h3>\n\n        <Checkbox\n          name=\"animals\"\n          label=\"Animais\"\n          options={[\n            { value: 'dog', label: 'Cachorro' },\n            { value: 'cat', label: 'Gato' },\n            { value: 'bird', label: 'Passarinho' },\n          ]}\n        />\n      </section>\n\n      <section>\n        <h3>radio</h3>\n\n        <Radio\n          name=\"genre\"\n          label=\"Genero\"\n          options={[\n            { value: 'f', label: 'Feminino' },\n            { value: 'm', label: 'Masculino' },\n            { value: 'o', label: 'Outros' },\n          ]}\n        />\n      </section>\n\n      <section>\n        <h3>date and range picker</h3>\n\n        <DatePicker name=\"initialDate\" label=\"Data de inicio\" />\n\n        <DateRangePicker name=\"periodDate\" label=\"Periodo de datas\" />\n      </section>\n\n      <section>\n        <h3>select</h3>\n\n        <Select\n          name=\"state\"\n          label=\"Estado\"\n          placeholder=\"Estado\"\n          options={[\n            { value: 'AC', label: 'Acre' },\n            { value: 'AL', label: 'Alagoas' },\n            { value: 'AP', label: 'Amapá' },\n            { value: 'AM', label: 'Amazonas' },\n            { value: 'BA', label: 'Bahia' },\n            { value: 'CE', label: 'Ceará' },\n            { value: 'DF', label: 'Distrito Federal' },\n            { value: 'ES', label: 'Espírito Santo' },\n            { value: 'GO', label: 'Goiás' },\n            { value: 'MA', label: 'Maranhão' },\n            { value: 'MT', label: 'Mato Grosso' },\n            { value: 'MS', label: 'Mato Grosso do Sul' },\n            { value: 'MG', label: 'Minas Gerais' },\n            { value: 'PA', label: 'Pará' },\n            { value: 'PB', label: 'Paraíba' },\n            { value: 'PR', label: 'Paraná' },\n            { value: 'PE', label: 'Pernambuco' },\n            { value: 'PI', label: 'Piauí' },\n            { value: 'RJ', label: 'Rio de Janeiro' },\n            { value: 'RN', label: 'Rio Grande do Norte' },\n            { value: 'RS', label: 'Rio Grande do Sul' },\n            { value: 'RO', label: 'Rondônia' },\n            { value: 'RR', label: 'Roraima' },\n            { value: 'SC', label: 'Santa Catarina' },\n            { value: 'SP', label: 'São Paulo' },\n            { value: 'SE', label: 'Sergipe' },\n            { value: 'TO', label: 'Tocantins' },\n          ]}\n        />\n      </section>\n\n      <section>\n        <h3>switch</h3>\n\n        <Switch name=\"print\" label=\"Impressora funcionando?\" />\n      </section>\n\n      <section>\n        <h3>colors</h3>\n\n        <Colors name=\"color\" label=\"Cor preferida\" />\n      </section>\n\n      {/* <section>\n        <h3>slider</h3>\n\n        <Slider name=\"slider\" />\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            formRef.current?.setFieldValue('slider', 35);\n          }}\n        >\n          set slider value\n        </button>\n      </section> */}\n\n      <section style={{ display: 'flex' }}>\n        <button type=\"button\" onClick={() => formRef.current?.reset()}>\n          clear form\n        </button>\n        <Tooltip content=\"Este botao vai apagar o form carai\" placement=\"right\">\n          <button type=\"button\">cancel</button>\n        </Tooltip>\n        <Tooltip content=\"Isso ae\">\n          <button type=\"submit\">submit</button>\n        </Tooltip>\n      </section>\n\n      {/* <section>\n        <h3>spin</h3>\n\n        <div style={{ position: 'relative' }}>\n          <Spin>\n            <p>\n              Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ratione\n              dicta officiis, temporibus et ipsam voluptatum est tenetur dolorem\n              nostrum perferendis eligendi nulla vel omnis illo assumenda, ad,\n              alias laboriosam. Suscipit.\n            </p>\n            <p>\n              Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ratione\n              dicta officiis, temporibus et ipsam voluptatum est tenetur dolorem\n              nostrum perferendis eligendi nulla vel omnis illo assumenda, ad,\n              alias laboriosam. Suscipit.\n            </p>\n          </Spin>\n        </div>\n\n        <Button type=\"button\" onClick={() => setIsLoading(!isLoading)}>\n          {isLoading ? <Spin color=\"light\" /> : 'Concluir'}\n        </Button>\n\n        <div\n          style={{\n            background: 'gray',\n            width: 200,\n            height: 200,\n            display: 'flex',\n          }}\n        >\n          <Spin color=\"light\" />\n        </div>\n      </section> */}\n    </Form>\n  );\n};\n\nexport default FormPage;\n","/Users/brunofabre/Documents/projects/coddee/siakit/src/pages/Form/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/react-app-env.d.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/routes/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/styles/global.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/utils/masks.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/pages/Form/Test/index.tsx",["212"],"import React, { useCallback, useRef } from 'react';\nimport { FormHandles } from '@unform/core';\n\nimport { Form, Input, TextArea } from '@components/Form';\n\nimport { useModal } from '../../../hooks/modal';\n\nimport { Container } from './styles';\n\nconst Test: React.FC = () => {\n  const { addModal } = useModal();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback((formData) => {\n    console.log(formData);\n  }, []);\n\n  function handleClick2(): void {\n    addModal({\n      title: 'teste modal 2',\n      content: () => (\n        <div>\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Totam\n          aliquid labore, illo molestiae facilis aperiam distinctio dolor\n          voluptatum similique eum, tenetur saepe architecto. Aut facilis\n          laborum sequi commodi distinctio pariatur!\n        </div>\n      ),\n    });\n  }\n\n  function handleClick(): void {\n    addModal({\n      title: 'teste modal 1',\n      content: () => (\n        <div>\n          sim\n          <button type=\"button\" onClick={handleClick2}>\n            add\n          </button>\n        </div>\n      ),\n    });\n  }\n\n  return (\n    <Container>\n      <Form ref={formRef} onSubmit={handleSubmit}>\n        <section>\n          <Input\n            name=\"firstName\"\n            label=\"Primeiro nome\"\n            placeholder=\"Primeiro nome\"\n          />\n          <Input\n            name=\"lastName\"\n            label=\"Ultimo nome\"\n            placeholder=\"Ultimo nome\"\n          />\n          <Input\n            name=\"age\"\n            label=\"Idade\"\n            type=\"number\"\n            placeholder=\"Idade\"\n            width=\"100px\"\n          />\n        </section>\n        <section>\n          <Input\n            name=\"username\"\n            label=\"Nome de usuario\"\n            placeholder=\"Nome de usuario\"\n          />\n          <Input name=\"email\" label=\"Email\" placeholder=\"Email\" />\n        </section>\n        <section>\n          <TextArea name=\"bio\" label=\"Biografia\" placeholder=\"Biografia\" />\n        </section>\n\n        <section style={{ justifyContent: 'flex-end' }}>\n          <button type=\"button\" onClick={handleClick}>\n            modal\n          </button>\n\n          <button type=\"button\" onClick={() => formRef.current?.submitForm()}>\n            submit form\n          </button>\n        </section>\n      </Form>\n    </Container>\n  );\n};\n\nexport default Test;\n","/Users/brunofabre/Documents/projects/coddee/siakit/src/pages/Form/Test/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/components/Remove/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/components/Remove/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/ModalContainer/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/hooks/modal.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/hooks/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/ModalContainer/Modal/index.tsx",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/ModalContainer/Modal/styles.ts",[],"/Users/brunofabre/Documents/projects/coddee/siakit/src/components/Form/index.ts",[],{"ruleId":"213","severity":1,"message":"214","line":165,"column":21,"nodeType":"215","endLine":165,"endColumn":32},{"ruleId":"216","severity":1,"message":"217","line":7,"column":8,"nodeType":"215","messageId":"218","endLine":7,"endColumn":12},{"ruleId":"216","severity":1,"message":"219","line":20,"column":8,"nodeType":"215","messageId":"218","endLine":20,"endColumn":16},{"ruleId":"216","severity":1,"message":"220","line":23,"column":10,"nodeType":"215","messageId":"218","endLine":23,"endColumn":16},{"ruleId":"216","severity":1,"message":"221","line":32,"column":10,"nodeType":"215","messageId":"218","endLine":32,"endColumn":19},{"ruleId":"216","severity":1,"message":"222","line":32,"column":21,"nodeType":"215","messageId":"218","endLine":32,"endColumn":33},{"ruleId":"216","severity":1,"message":"223","line":34,"column":16,"nodeType":"215","messageId":"218","endLine":34,"endColumn":23},{"ruleId":"216","severity":1,"message":"224","line":35,"column":10,"nodeType":"215","messageId":"218","endLine":35,"endColumn":17},{"ruleId":"225","severity":1,"message":"226","line":36,"column":52,"nodeType":"227","messageId":"228","endLine":36,"endColumn":55,"suggestions":"229"},{"ruleId":"213","severity":1,"message":"230","line":57,"column":6,"nodeType":"231","endLine":57,"endColumn":12,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":61,"column":7,"nodeType":"235","messageId":"236","endLine":61,"endColumn":18},{"ruleId":"233","severity":1,"message":"234","line":16,"column":5,"nodeType":"235","messageId":"236","endLine":16,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","@typescript-eslint/no-unused-vars","'Spin' is defined but never used.","unusedVar","'Dropdown' is defined but never used.","'Button' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setPage' is assigned a value but never used.","'loading' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["237","238"],"React Hook useEffect has a missing dependency: 'loadRepositories'. Either include it or remove the dependency array.","ArrayExpression",["239"],"no-console","Unexpected console statement.","MemberExpression","unexpected",{"messageId":"240","fix":"241","desc":"242"},{"messageId":"243","fix":"244","desc":"245"},{"desc":"246","fix":"247"},"suggestUnknown",{"range":"248","text":"249"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"248","text":"250"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [loadRepositories, page]",{"range":"251","text":"252"},[1190,1193],"unknown","never",[1697,1703],"[loadRepositories, page]"]